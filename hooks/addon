#!/bin/bash
set -eu
vault="secret/$GENESIS_VAULT_PREFIX"
alias="$GENESIS_ENVIRONMENT-blacksmith"

ip=$(lookup params.ip)
if want_feature "broker-tls"; then
  port=$(lookup params.blacksmith_tls_port 443)
  export BLACKSMITH_URL=https://$ip:$port
  scheme=https
else
  port=$(lookup params.blacksmith_port 3000)
  export BLACKSMITH_URL=http://$ip:$port
  scheme=http
fi

export BLACKSMITH_USERNAME=blacksmith
export BLACKSMITH_PASSWORD=$(safe read $vault/broker:password)

export BOSH_ENVIRONMENT=$(exodus bosh_address)
export BOSH_CA_CERT=$(exodus bosh_cacert)
export BOSH_CLIENT=$(exodus bosh_username)
export BOSH_CLIENT_SECRET="$(exodus bosh_password)"

list() {
  echo "The following addons are defined:"
  echo
  echo "  visit     Open the Blacksmith Web Management Console"
  echo "            in your browser (requires macOS)"
  echo
  echo "  register  Register this Blacksmith Broker with one of"
  echo "            your Genesis-deployed Cloud Foundry instances"
  echo
  echo "            Interprets its first argument as the name of"
  echo "            the Cloud Foundry environment.  If no argument"
  echo "            is given, the current environment name is used"
  echo
  echo "  bosh      Set up a local alias for the Blacksmith"
  echo "            BOSH director and log into it"
  echo
  echo "  boss      Interact with the broker via 'boss'"
  echo "            (must be installed separately)"
  echo
  echo "  curl      Issue raw HTTP requests (via curl) against"
  echo "            the Blacksmith Broker, with authentication"
  echo
}

bosh() {
  command $GENESIS_BOSH_COMMAND "$@"
  return $?
}

has_alias() {
  bosh envs | grep -q "^$BOSH_ENVIRONMENT\\t$alias\\t"
  return $?
}

setup_alias() {
  bosh alias-env --tty $alias | grep -v '^User'
}

is_logged_in() {
  local user
  user="$(bosh env --json | jq -Mr ".Tables[0].Rows[0].user")"
  if [[ "$user" == "null" || "$user" == "(not logged in)" ]] ; then
    return 1
  fi
  if [[ "$user" != "admin" ]] ; then
    describe >&2 "Logged in as #C{$user}, expected to be #C{admin}"
    return 2
  fi
  describe "Logged in as #C{$user}..."
  return 0
}

login() {
  bosh logout >/dev/null 2>&1

  echo "Logging you in as user '${BOSH_CLIENT}'..."
  printf "%s\n%s\n" "${BOSH_CLIENT}" "${BOSH_CLIENT_SECRET}" | \
    BOSH_CLIENT="" BOSH_CLIENT_SECRET="" bosh login
}

case $GENESIS_ADDON_SCRIPT in
list)
  list
  exit 0
  ;;

visit)
  if ! command -v open >/dev/null 2>&1; then
    echo "The 'visit' addon script only works on macOS, currently."
    exit 1
  fi
  open "$scheme://$BLACKSMITH_USERNAME:$BLACKSMITH_PASSWORD@$ip:$port"
  ;;

bosh)
  has_alias || setup_alias
  login
  ;;

boss)
  if ! command -v boss>/dev/null 2>&1; then
    echo "  !!! install the 'boss' cli first!"
    echo "      (https://github.com/jhunt/boss)"
  else
    exec boss "$@"
  fi
  ;;

curl)
  if ! command -v curl >/dev/null 2>&1; then
    echo "  !!! install curl first!"
  else
    path=$1; shift
    exec curl -u "$BLACKSMITH_USERNAME:$BLACKSMITH_PASSWORD" "$BLACKSMITH_URL$path" "$@" #| jq -r .
  fi
  ;;

register)
  env=${1:-$GENESIS_ENVIRONMENT}
  cf_api=$(exodus $env/cf api_url)
  cf_user=$(exodus $env/cf admin_username)
  cf_pass=$(exodus $env/cf admin_password)

  CF_OPTIONS=""
  cf_skip_ssl=$(exodus $env/cf self-signed)

  if [[ "$cf_skip_ssl" == "1" ]] ; then
    CF_OPTIONS="$CF_OPTIONS --skip-ssl-validation"
  fi

  (export HOME=$(mktemp -d blacksmith.regXXXXXXX)
   describe "authenticating to #C{$cf_api} as #G{$cf_user}..."
   cf api ${cf_api} ${CF_OPTIONS}
   cf auth ${cf_user} ${cf_pass}

   env_is_registered=$(cf curl /v2/service_brokers|jq --arg env_name "${env}-blacksmith" -r '.resources[].entity | select(.name==$env_name) | .name' )

   if [[ -n $env_is_registered ]] ; then

       describe "Found and updating service broker #M{$env-blacksmith}..."
       cf update-service-broker \
          $env-blacksmith       \
          $BLACKSMITH_USERNAME   \
          $BLACKSMITH_PASSWORD   \
          $BLACKSMITH_URL

   else

       describe "creating service broker #M{$env-blacksmith}..."
       cf create-service-broker \
          $env-blacksmith       \
          $BLACKSMITH_USERNAME   \
          $BLACKSMITH_PASSWORD   \
          $BLACKSMITH_URL

   fi
   describe "enabling service access..."
   for x in $(curl -Lsk -u "$BLACKSMITH_USERNAME:$BLACKSMITH_PASSWORD" "$BLACKSMITH_URL/v2/catalog" \
                   -H Accept:application/json | jq -r '.services[].id'); do
     describe "  - #C{$x}"
     cf enable-service-access $x
  done)
  ;;

*)
  echo "Unrecognized Blacksmith Genesis Kit addon."
  list
  exit 1
  ;;
esac
